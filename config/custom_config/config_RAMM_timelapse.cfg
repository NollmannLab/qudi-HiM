#  Example Qudi configuration file.
#
#
#
# IMPORTANT: The format of every 'module.Class' line has changed on 28.6.2015.
# =========  The class name now needs to be explicitly given here in the config.
#		  the config line must the form package.module.Class.ClassName
global:
    # list of modules to load when starting
    startup: ['man', 'tray']

    module_server:
        address: 'localhost'
        port: 12345

    ## For controlling the appearance of the GUI:
    stylesheet: 'qdark.qss'

hardware: 
    # cameradummy:
    #     module.Class: 'camera.camera_dummy.CameraDummy'

    hamamatsu_camera:
        module.Class: 'camera.hamamatsu.hamamatsu.HCam'
        default_exposure: 0.05

    thorlabs_camera:
        module.Class: 'camera.thorlabs.thorlabs_DCx.CameraThorlabs'
        default_exposure: 0.001
        default_gain: 1.0
        id_camera: 0 # if more than one camera is present

    nifpga:
        module.Class: 'fpga.ni_fpga.Nifpga'
        resource: 'RIO0'
        # default_bitfile: 'C:\\Users\\sCMOS-1\\qudi-cbs\\hardware\\fpga\\FPGA\\FPGA Bitfiles\\FPGAv0_FPGATarget_FPGAlasercontrol_4afbWL6Gt+k.lvbitx'
        default_bitfile: 'C:\\Users\\sCMOS-1\\qudi-cbs\\hardware\\fpga\\FPGA\\FPGA Bitfiles\\FPGAv0_FPGATarget_QUDIQPDPIDlaserc_kWY0ujWrcbM.lvbitx' # Associated to QUDI_QPD_PID_laser_control.vi
        wavelengths:
            - '405 nm'
            - '488 nm'
            - '561 nm'
            - '640 nm'
        registers_laser:
            - '405'
            - '488'
            - '561'
            - '640'
            - 'Update lasers'
        registers_qpd:
            - 'X'
            - 'Y'
            - 'Sum'
            - 'counter'
            - 'duration_ms'
        registers_autofocus:
            - 'setpoint'
            - 'P'
            - 'I'
            - 'reset'
            - 'autofocus'
            - 'ref_axis'
            - 'output'
        registers_general:
            - 'stop'
            - 'integration_time_us'
            - 'reset_counter'

    nidaq_6259:
        module.Class: 'daq.national_instruments_daq.NIDAQMSeries'
        read_write_timeout: 10  # in s
        ao_voltage_range: [0, 10]  # in V
        lasercontrol: False
        # ao channels
        piezo_write_ao_channel: 'Dev1/AO1'
        pump_write_ao_channel: 'Dev1/AO0'
        # ai channels
        piezo_read_ai_channel: 'Dev1/AI0'
        # do channels
        start_acquisition_do_channel: '/Dev1/port0/line7'  # DIO3
        # di channels
        acquisition_done_di_channel: '/Dev1/port0/line8'  # DIO4
    
    nofilter_dummy:
        module.Class: 'wheels.dummy_nofilter.NoFilterDummy'
        num_filters: 1
        filterpositions:
            - 1
        filters:
            - 'quad-band filter'
        allowed_lasers:
            - [True, True, True, True]

            # please specify for all elements corresponding information in the same order.

    mcl:
        module.Class: 'motor.motor_mcl_nanodrive.MCLNanoDrive'
        dll_location: 'C:\\Program Files\\Mad City Labs\\NanoDrive\\Madlib.dll'   # path to library file
        pos_min: 0  # in um
        pos_max: 80  # in um
        max_step: 2  # in um

    ms2000:
        module.Class: 'motor.motor_asi_ms2000.MS2000'
        com_port: 'COM5'
        baud_rate: '115200'
        first_axis_label: 'x'
        second_axis_label: 'y'
        third_axis_label: 'z'
        LED connected: True
            
logic:           
    camera_logic:
        module.Class: 'camera_logic2.CameraLogic'
        connect:
            hardware: 'hamamatsu_camera'  #'cameradummy'

    brightfield_logic:
        module.Class: 'brightfield_logic.BrightfieldLogic'
        connect:
            controller: 'ms2000'

    lasercontrol_logic:
        module.Class: 'lasercontrol_logic.LaserControlLogic'
        controllertype: 'fpga'  # 'daq'
        connect:
            controller: 'nifpga'

    nidaq_logic:
        module.Class: 'daq_logic.DAQLogic'
        voltage_rinsing_pump: -3
        connect:
            daq: 'nidaq_6259'

    filterwheel_logic: 
        module.Class: 'filterwheel_logic.FilterwheelLogic'
        connect:
            wheel: 'nofilter_dummy'
            lasercontrol: 'lasercontrol_logic'

    focus_logic:
        module.Class: 'focus_logic.FocusLogic'
        init_position : 25 # in Âµm
        readout_device: 'qpd'
        rescue_autofocus_possible: True
        experiments:
            - 'ROI multicolor scan RAMM'
            - 'Timelapse RAMM'
            - 'Fast timelapse RAMM'
            - 'Hubble RAMM'
            - 'Manual'
        connect: 
            piezo: 'mcl'
            autofocus : 'autofocus_logic'

    autofocus_logic:
        module.Class: 'autofocus_logic_FPGA.AutofocusLogic'
        proportional_gain : 50 # in %%
        integration_gain : 50 # in %%
        exposure: 0.001
        focus_offset: 140  # en um
        autofocus_ref_axis : 'X' # 'Y'
        num_points_fit : 10
        stabilization_threshold : 1
        connect:
            camera : 'thorlabs_camera'
            fpga: 'nifpga'
            stage: 'ms2000'

    roi_logic:
        module.Class: 'roi_logic.RoiLogic'
        connect: 
            stage: 'ms2000'
        
    exp_config_logic:
        module.Class: 'experiment_configurator_logic.ExpConfigLogic'
        experiments:
            - 'Multicolor scan RAMM'
            - 'ROI multicolor scan RAMM'
            - 'Photobleaching RAMM'
            - 'Timelapse RAMM'
            - 'Fast timelapse RAMM'
            - 'Hubble RAMM'
        supported fileformats:
            - 'tif'
            - 'npy'
            # - 'fits'
        default path imagedata: 'F:\' #'E:\DATA'
        connect:
            camera_logic: 'camera_logic'
            laser_logic: 'lasercontrol_logic'
            filterwheel_logic: 'filterwheel_logic'

    tasklogic:
        module.Class: 'taskrunner.TaskRunner'
        tasks:
            MulticolorScanTask:
                module: 'multicolor_scan_task_RAMM'
                needsmodules:
                    laser: 'lasercontrol_logic'
                    bf: 'brightfield_logic'
                    cam: 'camera_logic'
                    daq: 'nidaq_logic'
                    focus: 'focus_logic' 
                config:
                    path_to_user_config: 'C:\Users\sCMOS-1\qudi_files\qudi_task_config_files\multicolor_scan_task_RAMM.yml'

            ROIMulticolorScanTask:
                module: 'roi_multicolor_scan_task_RAMM'
                needsmodules:
                    laser: 'lasercontrol_logic'
                    bf: 'brightfield_logic'
                    cam: 'camera_logic'
                    daq: 'nidaq_logic'
                    focus: 'focus_logic'
                    roi: 'roi_logic'
                config:
                    path_to_user_config: 'C:\Users\sCMOS-1\qudi_files\qudi_task_config_files\ROI_multicolor_scan_task_RAMM.yml' 

            PhotobleachingTask:
                module: 'photobleaching_task_RAMM'
                needsmodules:
                    laser: 'lasercontrol_logic'
                    roi: 'roi_logic'
                config:
                    path_to_user_config: 'C:\Users\sCMOS-1\qudi_files\qudi_task_config_files\photobleaching_task_RAMM.yml'

            TimelapseTask:
                module: 'timelapse_task_RAMM'
                needsmodules:
                    laser: 'lasercontrol_logic'
                    bf: 'brightfield_logic'
                    cam: 'camera_logic'
                    daq: 'nidaq_logic'
                    focus: 'focus_logic'
                    roi: 'roi_logic'
                config:
                    path_to_user_config: 'C:\Users\sCMOS-1\qudi_files\qudi_task_config_files\timelapse_task_RAMM.yml'

            FastTimelapseTask:
                module: 'fast_timelapse_task_RAMM'
                needsmodules:
                    laser: 'lasercontrol_logic'
                    bf: 'brightfield_logic'
                    cam: 'camera_logic'
                    daq: 'nidaq_logic'
                    focus: 'focus_logic'
                    roi: 'roi_logic'
                config:
                    path_to_user_config: 'C:\Users\sCMOS-1\qudi_files\qudi_task_config_files\fast_timelapse_task_RAMM.yml'

            HubbleTask:
                module: 'hubble_task_RAMM'
                needsmodules:
                    laser: 'lasercontrol_logic'
                    bf: 'brightfield_logic'
                    cam: 'camera_logic'
                    daq: 'nidaq_logic'
                    focus: 'focus_logic'
                    roi: 'roi_logic'
                config:
                    path_to_user_config: 'C:\Users\sCMOS-1\qudi_files\qudi_task_config_files\hubble_task_RAMM.yml'

gui:
    tray:
        module.Class: 'trayicon.TrayIcon'

    man:
        module.Class: 'manager.managergui.ManagerGui'

    Basic Imaging:
        module.Class: 'fluorescence_microscopy.basic_gui.BasicGUI'
        default_path: 'F:\' # 'E:\DATA'
        brightfield_control: True
        Setup: 'RAMM'
        connect:
            camera_logic: 'camera_logic'
            laser_logic: 'lasercontrol_logic'
            filterwheel_logic: 'filterwheel_logic'
            brightfield_logic: 'brightfield_logic'

    Focus Tools:
        module.Class: 'focus.focus_gui.FocusGUI'
        connect:
            focus_logic: 'focus_logic'

    ROI selector:
        module.Class: 'ROI.roi_gui.RoiGUI' 
        default_path: 'C:\Users\sCMOS-1\qudi_files\qudi_roi_lists'
        stagemarker_width: 200
        connect: 
            roi_logic: 'roi_logic'

    Experiment Configurator:
        module.Class: 'experiment_configurator.exp_configurator_gui.ExpConfiguratorGUI'
        default_location_qudi_files: 'C:\Users\sCMOS-1\qudi_files'
        connect:
            exp_logic: 'exp_config_logic'   

    Taskrunner:
        module.Class: 'taskrunner.taskgui.TaskGui'
        connect:
            tasklogic: 'tasklogic'

