#  Example Qudi configuration file.
#
#
#
# IMPORTANT: The format of every 'module.Class' line has changed on 28.6.2015.
# =========  The class name now needs to be explicitly given here in the config.
#		  the config line must the form package.module.Class.ClassName
global:
    # list of modules to load when starting
    startup: ['man', 'tray']

    module_server:
        address: 'localhost'
        port: 12345

    ## For controlling the appearance of the GUI:
    stylesheet: 'qdark.qss'

hardware:

    cameradummy:
        module.Class: 'camera.camera_dummy.CameraDummy'        
    
    dummy_wheel:
        module.Class: 'wheels.dummy_filter_wheel.FilterWheelDummy'
        num_filters: 6
        filterpositions:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
        filters:
            - '700 +/- 37 nm'
            - '600 +/- 25 nm'
            - '488 - 491 / 561 nm'
            - '525 +/- 22.5 nm'
            - '617 +/- 36 nm'
            - '460 +/- 25 nm'
        allowed_lasers:
            - [True, True, True, True]
            - [True, True, True, True]
            - [True, True, True, True]
            - [True, True, True, True]
            - [True, True, True, False]
            - [True, False, True, True]

            # please specify for all elements corresponding information in the same order.
        
        
    dummy_daq:
        module.Class: 'daq.dummy_daq.DummyDaq'
        wavelengths:
            - '405 nm'
            - '488 nm'
            - '512 nm'
            - '633 nm'
        ao_channels:
            - '/Dev1/AO0'
            - '/Dev1/AO1'
            - '/Dev1/AO2'
            - '/Dev1/AO3'
        ao_voltage_ranges:
            - [0, 10]
            - [0, 10]
            - [0, 10]
            - [0, 10]
                        
    piezo_dummy:
        module.Class: 'motor.motor_dummy.MotorDummy'
          
    motor_dummy:
        module.Class: 'motor.motor_dummy.MotorDummy'
        
        
  

logic:
    camera_logic:
        module.Class: 'camera_logic2.CameraLogic'
        connect:
            #hardware: 'thorlabs_camera'
            hardware: 'cameradummy'

    focus_logic:
        module.Class: 'focus_logic.FocusLogic'
        init_position: 10
        connect:
            piezo: 'motor_dummy'
           
    lasercontrol_logic:
        module.Class: 'lasercontrol_logic.LaserControlLogic'
        controllertype: 'daq'  # 'fpga'
        connect:
            controller: 'dummy_daq'

    filterwheel_logic: 
        module.Class: 'filterwheel_logic.FilterwheelLogic'
        connect:
            wheel: 'dummy_wheel'
            lasercontrol: 'lasercontrol_logic'

    roi_logic:
        module.Class: 'roi_logic.RoiLogic'
        connect: 
            stage: 'motor_dummy'

    tasklogic:
        module.Class: 'taskrunner.TaskRunner'
        tasks:
            #dummyTask:
            #    module: 'dummy'
            #ImagingTask:
            #    module: 'serpentine_scan_task'
            #    needsmodules:
            #        roi: 'roi_logic'
            #        daq: 'lasercontrol_logic'
            #        camera: 'camera_logic'  
            #        filter: 'filterwheel_logic'
            #    config:
            #        path_to_user_config: 'C:/Users/admin/qudi-cbs-user-configs/serpentine_scan_task_config.json'
                    
            #MultichannelImagingTask:
            #    module: 'multichannel_serpentine_scan_task'
            #    needsmodules:
            #        roi: 'roi_logic'
            #        daq: 'lasercontrol_logic'
            #        camera: 'camera_logic'
            #        filter: 'filterwheel_logic'
            #    config:
            #        path_to_user_config: 'C:/Users/admin/qudi-cbs-user-configs/multichannel_task_config.json'

            MulticolorImagingTask:
                module: 'multicolor_imaging_task'
                needsmodules:
                    camera: 'camera_logic'
                    daq: 'lasercontrol_logic'
                    filter: 'filterwheel_logic'
                config:
                    path_to_user_config: 'C:/Users/admin/qudi-cbs-user-configs/testconfigfile.txt'

            MulticolorScanTask:
                module: 'multicolor_scan_task_PALM'
                needsmodules:
                    camera: 'camera_logic'
                    daq: 'lasercontrol_logic'
                    filter: 'filterwheel_logic'
                    focus: 'focus_logic'
                config:
                    path_to_user_config: 'C:/Users/admin/qudi-cbs-user-configs/testconfigfile.txt'

    exp_config_logic:
        module.Class: 'experiment_configurator_logic.ExpConfigLogic'
        experiments:
            - 'multicolor imaging'
            - 'dummy experiment'
        supported fileformats:
            - 'tiff'
            - 'fits'
        default path: '/home/barho/images'
        connect:
            camera_logic: 'camera_logic'
            laser_logic: 'lasercontrol_logic'
            filterwheel_logic: 'filterwheel_logic'


gui:
    tray:
        module.Class: 'trayicon.TrayIcon'

    man:
        module.Class: 'manager.managergui.ManagerGui'


    taskrunner:
        module.Class: 'taskrunner.taskgui.TaskGui'
        connect:
            tasklogic: 'tasklogic'

    basic_gui:
        module.Class: 'fluorescence_microscopy.basic_gui.BasicGUI'
        default_path: 'E:\Data'
        connect:
            camera_logic: 'camera_logic'
            laser_logic: 'lasercontrol_logic'
            filterwheel_logic: 'filterwheel_logic'

    focus_gui:
        module.Class: 'focus.focus_gui.FocusGUI'
        connect:
            focus_logic: 'focus_logic'

    roi_gui:
        module.Class: 'ROI.roi_gui.RoiGUI' 
        default_path: 'C:\Users\admin\roi_lists'
        stagemarker_width: 50
        connect: 
            roi_logic: 'roi_logic'

    exp_configurator_gui:
        module.Class: 'experiment_configurator.exp_configurator_gui.ExpConfiguratorGUI'
        default_path: 'E:\Data'
        connect:
            exp_logic: 'exp_config_logic'

