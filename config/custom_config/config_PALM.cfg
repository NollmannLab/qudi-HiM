#  Example Qudi configuration file.
#
#
#
# IMPORTANT: The format of every 'module.Class' line has changed on 28.6.2015.
# =========  The class name now needs to be explicitly given here in the config.
#		  the config line must the form package.module.Class.ClassName
global:
    # list of modules to load when starting
    startup: ['man', 'tray']

    module_server:
        address: 'localhost'
        port: 12345

    ## For controlling the appearance of the GUI:
    stylesheet: 'qdark.qss'

hardware:
#     andor_ultra_camera:
#         module.Class: 'camera.andor.iXon897_ultra.IxonUltra'
#         sdk_location: C:\Program Files\Andor SOLIS\Drivers\atmcd64d.dll' # path to library file
#         default_exposure: 0.05  # en s
#         default_read_mode: 'IMAGE'
#         default_temperature: -60
#         default_cooler_on: True
#         default_acquisition_mode: 'RUN_TILL_ABORT' # 'SINGLE_SCAN'
#         default_trigger_mode: 'INTERNAL'

    andor_ultra_camera:
        module.Class: 'camera.andor.iXon888_ultra.IxonUltra'
        sdk_location: 'C:\Program Files\Andor SDK\Python\pyAndorSDK2'
        camera_name: 'iXon Ultra 888'
        temperature_control: True
        gain_control: True
        mechanical_shutter: True
        support_live_acquisition: True
        frame_transfer: True
        default_exposure: 0.05  # en s
        default_read_mode: 'IMAGE'
        default_temperature: -60
        default_cooler_on: True
        default_acquisition_mode: 'KINETICS'
        default_trigger_mode: 'INTERNAL'
        max_N_images_movie: 1000
        max_N_images_spool: 2000

    thorlabs_camera:
        module.Class: 'camera.thorlabs.thorlabs_DCx.CameraThorlabs'
        default_exposure: 0.1
        default_gain: 1.0
        id_camera: 0 # if more than one camera is present

    nidaq_6259:
        module.Class: 'daq.national_instruments_daq.NIDAQMSeries'
        read_write_timeout: 10
        ao_voltage_range: [0, 10]  # in V
        lasercontrol: True
        wavelengths:
            - '405 nm'
            - '488 nm'
            - '561 nm'
            - '641 nm'
        laser_ao_channels:
            - '/Dev1/AO0'
            - '/Dev1/AO2'
            - '/Dev1/AO1'
            - '/Dev1/AO3'
        trigger_do_channel: '/Dev1/port0/line2'
        trigger_ai_channel: '/Dev1/AI0'

#     thorlabs_fast_wheel:
#         module.Class: 'wheels.thorlabs_fast_filter_wheel.ThorlabsFastFilterWheel'
#         serial_num: 40846334
#         num_filters: 6
#         filterpositions:
#             - 1
#             - 2
#             - 3
#             - 4
#             - 5
#             - 6
#         filters:
#             - '700 +/- 25 nm'  # 'ND'
#             - '600 +/- 25 nm'
#             - '488 - 491 / 561 nm' # '700 +/- 37 nm' #
#             - '525 +/- 22.5 nm'
#             - '600 +/- 64 nm' # '617 +/- 36 nm'
#             - '460 +/- 25 nm'
#         allowed_lasers:
#             - [True, True, True, True]
#             - [True, True, True, True]
#             - [True, True, True, True]
#             - [True, True, True, True]
#             - [True, True, True, False]
#             - [True, False, True, True]

    thorlabs_wheel:
        module.Class: 'wheels.thorlabs_motorized_filter_wheel.ThorlabsMotorizedFilterWheel'
        interface: 'COM6'
        num_filters: 6
        filterpositions:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
        filters:
            - '700 +/- 25 nm'  # 'ND'
            - '600 +/- 25 nm'
            - '488 - 491 / 561 nm' # '700 +/- 37 nm' #
            - '525 +/- 22.5 nm'
            - '600 +/- 64 nm' # '617 +/- 36 nm'
            - '460 +/- 25 nm'
        allowed_lasers:
            - [True, True, True, True]
            - [True, True, True, True]
            - [True, True, True, True]
            - [True, True, True, True]
            - [True, True, True, False]
            - [True, False, True, True]

    pifoc:
        module.Class: 'motor.motor_pifoc.PIFOC'
        controllername: 'E816'
        serialnumber: '110059675'
        pos_min: 0  # in um
        pos_max: 80  # in um
        max_step: 1  # in um

    ms2000:
        module.Class: 'motor.motor_asi_ms2000.MS2000'
        com_port: 'COM4'
        baud_rate: 9600
        first_axis_label: 'x'
        second_axis_label: 'y'
        LED connected: False

logic:
    camera_logic:
        module.Class: 'camera_logic.CameraLogic'
        fileformat_list:
            - 'tif'
            - 'ome.tif'
            - 'fits'
            - 'npy'
            - 'hdf5'
        connect:
            hardware: 'andor_ultra_camera'

    lasercontrol_logic:
        module.Class: 'lasercontrol_logic.LaserControlLogic'
        controllertype: 'daq'  
        connect:
            controller: 'nidaq_6259'

    filterwheel_logic: 
        module.Class: 'filterwheel_logic.FilterwheelLogic'
        connect:
            wheel: 'thorlabs_wheel'  #thorlabs_fast_wheel'
            lasercontrol: 'lasercontrol_logic'

    focus_logic:
        module.Class: 'focus_logic.FocusLogic'
        init_position: 25 # in um
        readout_device: 'camera'
        rescue_autofocus_possible: False
        minimum_piezo_displacement_autofocus : 0.02 # in Âµm
        experiments:
            - 'ROI multicolor scan PALM'
            - 'Timelapse PALM'
            - 'Manual'
        connect:
            piezo: 'pifoc'
            autofocus: 'autofocus_logic'

    autofocus_logic:
        module.Class: 'autofocus_logic_camera.AutofocusLogic'
        proportional_gain : 0.1 # in %%
        integration_gain : 1 # in %%
        exposure: 0.001
        autofocus_ref_axis : 'X' # 'Y'
        num_points_fit : 10
        stabilization_threshold : 1
        target_tolerance : 10
        connect:
            camera : 'thorlabs_camera'
           
    roi_logic:
        module.Class: 'roi_logic.RoiLogic'
        connect: 
            stage: 'ms2000'

    experiment_config_logic:
        module.Class: 'experiment_configurator_logic.ExpConfigLogic'
        experiments:
            - 'Multicolor imaging PALM'
            - 'Multicolor scan PALM'
            - 'ROI multicolor scan PALM'
            - 'Timelapse PALM'
        supported fileformats:
            - 'tif'
            - 'ome.tif'
            # - 'fits'
            - 'npy'
            - 'hdf5'
        default path imagedata: 'E:\'
        connect:
            camera_logic: 'camera_logic'
            laser_logic: 'lasercontrol_logic'
            filterwheel_logic: 'filterwheel_logic'

    task_logic:
        module.Class: 'taskrunner.TaskRunner'
        tasks:
            MulticolorImagingTask:
                module: 'multicolor_imaging_task_PALM'
                needsmodules:
                    camera: 'camera_logic'
                    daq: 'lasercontrol_logic'
                    filter: 'filterwheel_logic'
                config:
                    path_to_user_config: 'C:\Users\admin\qudi_files\qudi_task_config_files\multicolor_imaging_task_PALM.yml'
                    path_to_metadata_template: 'C:\Users\admin\qudi-cbs\documentation\qudi-cbs documentation\qudi-HiM_hardware\metadata\PALM_setup.cfg'

            MulticolorScanTask:
                module: 'multicolor_scan_task_PALM'
                needsmodules:
                    camera: 'camera_logic'
                    daq: 'lasercontrol_logic'
                    filter: 'filterwheel_logic'
                    focus: 'focus_logic'
                config:
                    path_to_user_config: 'C:\Users\admin\qudi_files\qudi_task_config_files\multicolor_scan_task_PALM.yml'
                    path_to_metadata_template: 'C:\Users\admin\qudi-cbs\documentation\qudi-cbs documentation\qudi-HiM_hardware\metadata\PALM_setup.cfg'

            ROIMulticolorScanTask:
                module: 'roi_multicolor_scan_task_PALM'
                needsmodules:
                    camera: 'camera_logic'
                    daq: 'lasercontrol_logic'
                    filter: 'filterwheel_logic'
                    focus: 'focus_logic'
                    roi: 'roi_logic'
                config:
                    path_to_user_config: 'C:\Users\admin\qudi_files\qudi_task_config_files\ROI_multicolor_scan_task_PALM.yml'
                    path_to_metadata_template: 'C:\Users\admin\qudi-cbs\documentation\qudi-cbs documentation\qudi-HiM_hardware\metadata\PALM_setup.cfg'

#             TimelapseTask:
#                 module: 'timelapse_task_PALM'
#                 needsmodules:
#                     camera: 'camera_logic'
#                     daq: 'lasercontrol_logic'
#                     filter: 'filterwheel_logic'
#                     focus: 'focus_logic'
#                     roi: 'roi_logic'
#                 config:
#                     path_to_user_config: 'C:\Users\admin\qudi_files\qudi_task_config_files\timelapse_task_PALM.yml'
#                     path_to_metadata_template: 'C:\Users\admin\qudi-cbs\documentation\qudi-cbs documentation\qudi-HiM_hardware\metadata\PALM_setup.cfg'

gui:
    tray:
        module.Class: 'trayicon.TrayIcon'

    man:
        module.Class: 'manager.managergui.ManagerGui'

    Basic Imaging:
        module.Class: 'fluorescence_microscopy.basic_gui.BasicGUI'
        default_path: 'E:\'
        brightfield_control: False
        Setup: 'PALM'
        metadata_template: 'C:\Users\admin\qudi-cbs\documentation\qudi-cbs documentation\qudi-HiM_hardware\metadata\PALM_setup.cfg'
        connect:

            camera_logic: 'camera_logic'
            laser_logic: 'lasercontrol_logic'
            filterwheel_logic: 'filterwheel_logic'

    Focus Tools:
        module.Class: 'focus.focus_gui.FocusGUI'
        connect:
            focus_logic: 'focus_logic'

    ROI selector:
        module.Class: 'ROI.roi_gui.RoiGUI' 
        default_path: 'C:\Users\admin\qudi_files\qudi_roi_lists'
        stagemarker_width: 50
        connect: 
            roi_logic: 'roi_logic'

    Experiment Configurator:
        module.Class: 'experiment_configurator.exp_configurator_gui.ExpConfiguratorGUI'
        default_location_qudi_files: 'C:\Users\admin\qudi_files'
        connect:
            exp_logic: 'experiment_config_logic'

    Taskrunner:
        module.Class: 'taskrunner.taskgui.TaskGui'
        connect:
            tasklogic: 'task_logic'

